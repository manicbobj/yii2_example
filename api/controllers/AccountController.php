<?php
/**
 * Created by PhpStorm.
 * UserType: osboxes
 * Date: 28/11/17
 * Time: 01:00
 */

namespace app\api\controllers;


use app\models\User;
use MongoDB\BSON\UTCDateTime;
use yii\base\DynamicModel;
use yii\mongodb\Query;
use yii\rest\Controller;

class AccountController extends Controller
{
    public function actions()
    {
        return [
            'options' => [
                'class' => 'yii\rest\OptionsAction',
                'resourceOptions' => ['OPTIONS', 'POST']
            ],
        ];
    }

    protected function verbs()
    {
        $verbs = parent::verbs(); // TODO: Change the autogenerated stub
        $verbs['register'] = ['POST', 'OPTIONS'];
        $verbs['login'] = ['POST', 'OPTIONS'];
        return $verbs;
    }

    public function actionRegister() {
        $request = \Yii::$app->request;
        $username = $request->post('username');
        $password = $request->post('password');

        $model = new DynamicModel(compact('username', 'password'));
        $model->addRule(['username', 'password'], 'required')->validate();

        if($model->hasErrors()) {
            return [
                'success' => false,
                'message' => 'Request is not valid',
                'detail' => $model->getErrors()
            ];
        } else {
            $user = User::findByUsername($username);
            if($user != null) {
                return [
                    'success' => false,
                    'message' => "UserType already exists"
                ];
            }

            $user = new User();
            $user->username = $username;
            $user->setPassword($password);

            $user->save();
            return [
                'success' => true,
                'message' => 'New user has been registered'
            ];
        }
    }

    public function actionLogin() {
        $request = \Yii::$app->request;

        $username = $request->post('username');
        $password = $request->post('password');

        $model = new DynamicModel(compact('username', 'password'));
        $model->addRule(['username', 'password'], 'required')->validate();

        if($model->hasErrors()) {
            return [
                'success' => false,
                'message' => 'Request is not valid',
                'detail' => $model->getErrors()
            ];
        } else {
            $user = User::findByUsername($username);
            if($user == null) {
                return [
                    'success' => false,
                    'message' => "UserType wasn't found"
                ];
            }

            if(!$user->validatePassword($password)) {
                return [
                    'success' => false,
                    'message' => "Password doesn't match"
                ];
            }

            $user->accessToken = bin2hex(openssl_random_pseudo_bytes(16));
            $user->tokenDate = new UTCDateTime();
            $user->save();

            return [
                'success' => true,
                'data' => $user
            ];
        }
    }
}